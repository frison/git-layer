#!/bin/sh
#
# Version: 0.0.1
#
# This script is used to pull a git repository and copy the files to a relative path
# in the current directory. It is useful for pulling in a git repository as a layer
# on top of an existing directory.
#
# The script will remove any files that are listed in the .gitignore.layer file in the
# root of the repository you are pulling in.
#
# Usage: git-layer <git-url> <relative-path>
# Example: git-layer git@github.com:frison/_git-layer.git .
#

usage () {
    echo "Usage: $0 <git-url> <relative-path>"
    echo "Example: git-layer git@github.com:frison/_git-layer.git ."
}

die () {
    >&2 echo "[git-layer] FATAL: $@"
    exit 1
}

log_info () {
    echo "[git-layer] INFO: $@"
}

log_error () {
    >&2 echo "[git-layer] ERROR: $@"
}

use_temp () {
  # Temp directory pattern inspired by https://stackoverflow.com/questions/4632028/how-to-create-a-temporary-directory
  export WORK_DIR=$( mktemp -d )

  # check if tmp dir was created
  if ! test -d $WORK_DIR ; then
    die "Could not create temp dir"
  fi
  
  # This captures the workdir in the closure so that even if the WORK_DIR is changed
  # the cleanup function will still be able to delete the correct directory
  trap "cleanup $WORK_DIR" EXIT
}

# deletes the temp directory
cleanup () {
  local workdir=$1

  (rm -rf "$workdir") || {
    log_error "Could not remove temp dir $workdir -- manual cleanup required"
  }
  log_info "Deleted temp working directory $workdir"
}



process_gitignore_layer () {
    # This removes everything from the directory that is in the .gitlayer.ignore file
    while IFS= read -r line || [ -n "$line" ]; do
        # Remove comments from the line (if any)
        line=$(echo "$line" | sed 's/#.*//')

        # Trim leading and trailing whitespace
        line=$(echo "$line" | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//')

        # Skip empty lines
        if [ -z "$line" ]; then
            continue
        fi

        # Use find to locate all files that match the pattern
        find . -name "$line" -type f -delete
    done < ".gitignore.layer"

    rm .gitignore.layer
}

main () {
  export CURRENT_DIR=$( pwd )
  export GIT_URL=$1
  export RELATIVE_PATH=$2

  if [ -z "$GIT_URL" ]; then
    usage
    die "Missing git url"
  fi

  if [ -z "$RELATIVE_PATH" ]; then
    usage
    die "Missing relative path"
  fi

  if [ ! -d "${CURRENT_DIR}/${RELATIVE_PATH}" ]; then
    die "Relative path (${CURRENT_DIR}/${RELATIVE_PATH} does not exist"
  fi

  use_temp || exit $?

  cd $WORK_DIR

  # Shallow clone the directory, then remove the .git directory so it's just a bunch of files
  git clone --depth 1 $GIT_URL .
  rm -rf .git

  if [ -f ".gitignore.layer" ]; then
    process_gitignore_layer
  fi

  # Copy the files to the relative path
  cp -r . ${CURRENT_DIR}/${RELATIVE_PATH}
}

main "$@"